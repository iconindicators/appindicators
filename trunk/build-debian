#!/bin/bash


BUILD_DIR="build"
NAME="indicator-stardate"
VERSION=1.0.17
PYTHON_UTILS=../PythonUtils/src/pythonutils.py

if [ ! -f $PYTHON_UTILS ];
then
    echo "$PYTHON_UTILS not found - ABORTING!" && exit 0
fi

rm -rf $BUILD_DIR

mkdir -p $BUILD_DIR/$NAME-$VERSION
cp $NAME.desktop $BUILD_DIR/$NAME-$VERSION
cp build-debian $BUILD_DIR/$NAME-$VERSION

mkdir -p $BUILD_DIR/$NAME-$VERSION/src
cp src/example.py src/indicator-stardate.py src/stardate.py $BUILD_DIR/$NAME-$VERSION/src
cp $PYTHON_UTILS $BUILD_DIR/$NAME-$VERSION/src

mkdir -p $BUILD_DIR/$NAME-$VERSION/icons/elementary
cp icons/indicator-stardate-elementary.svg $BUILD_DIR/$NAME-$VERSION/icons/elementary/indicator-stardate.svg

mkdir -p $BUILD_DIR/$NAME-$VERSION/icons/hicolor
cp icons/indicator-stardate-hicolor.svg $BUILD_DIR/$NAME-$VERSION/icons/hicolor/indicator-stardate.svg

mkdir -p $BUILD_DIR/$NAME-$VERSION/icons/lubuntu
cp icons/indicator-stardate-lubuntu.svg $BUILD_DIR/$NAME-$VERSION/icons/lubuntu/indicator-stardate.svg

mkdir -p $BUILD_DIR/$NAME-$VERSION/icons/ubuntu-mono-dark
cp icons/indicator-stardate-ubuntu-mono-dark.svg $BUILD_DIR/$NAME-$VERSION/icons/ubuntu-mono-dark/indicator-stardate.svg

mkdir -p $BUILD_DIR/$NAME-$VERSION/icons/ubuntu-mono-light
cp icons/indicator-stardate-ubuntu-mono-light.svg $BUILD_DIR/$NAME-$VERSION/icons/ubuntu-mono-light/indicator-stardate.svg

cd $BUILD_DIR
tar -czf "${NAME}_${VERSION}.orig.tar.gz" $NAME-$VERSION
cd ..

mkdir -p $BUILD_DIR/$NAME-$VERSION/debian
cp -r packaging/debian $BUILD_DIR/$NAME-$VERSION

cd $BUILD_DIR/$NAME-$VERSION
debuild -S -sa 
cd ..
rm -rf $NAME-$VERSION

echo "Now run from the build directory: dput ppa:thebernmeister/ppa ${NAME}_${VERSION}-1_source.changes"


# References for building a Debian package for PPA...
# http://askubuntu.com/questions/27715/create-a-deb-package-from-scripts-or-binaries
# http://askubuntu.com/questions/28562/how-do-i-create-a-ppa-for-a-working-program
# http://askubuntu.com/questions/90764/how-do-i-create-a-deb-package-for-a-single-python-script
# http://blog.garethj.com/2009/06/02/building-deb-packages-for-python-applications
# http://developer.ubuntu.com/packaging/html/debian-dir-overview.html
# http://help.launchpad.net/Packaging/PPA/Uploading
# http://help.ubuntu.com/community/PythonRecipes/DebianPackage
# http://savetheions.com/2010/01/20/packaging-python-applicationsmodules-for-debian
# http://shallowsky.com/blog/programming/packaging-launchpad-ppas.html
# http://ubuntulinuxtipstricks.blogspot.com.au/2010/08/is-packaging-new-software-hard.html
# http://wiki.debian.org/Python/Packaging
# http://wiki.ubuntu.com/MOTU/School/PackagingWithoutCompiling
# http://wiki.ubuntu.com/PackagingGuide/HandsOn
# http://wiki.ubuntu.com/PackagingGuide/Python
# http://www.debian.org/doc/manuals/maint-guide
# http://www.debian.org/doc/packaging-manuals/python-policy
# http://www.debian-administration.org/articles/336
# http://news.softpedia.com/news/How-to-Repack-Deb-Files-on-Debian-and-Ubuntu-404930.shtml