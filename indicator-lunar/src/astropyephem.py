#!/usr/bin/env python3
# -*- coding: utf-8 -*-


# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.


# Calculate astronomical information using PyEphem.


try:
    from ephem.cities import _city_data
    import ephem
    available = True

except ImportError:
    available = False

from astrobase import AstroBase
from distutils.version import LooseVersion

import datetime, eclipse, locale, math


class AstroPyEphem( AstroBase ):

    # DO NOT EDIT: Content must be created using 'createephemerisstars.py'.
    __EPHEMERIS_STARS = {
        "ACAMAR"            : "ACAMAR,f|S|A4,2.97102074|-53.53,-40.30467239|25.71,2.88",
        "ACHERNAR"          : "ACHERNAR,f|S|B3,1.62856849|88.02,-57.23675744|-40.08,0.45",
        "ACHIRD"            : "ACHIRD,f|S|G0,0.81841422|1087.11,57.81518707|-559.65,3.46",
        "ACRAB"             : "ACRAB,f|S|B0,16.09061964|-6.75,-19.80545336|-24.89,2.56",
        "ACRUX"             : "ACRUX,f|S|B0,12.44330439|-35.37,-63.09909168|-14.73,0.77",
        "ACUBENS"           : "ACUBENS,f|S|A5,8.97478380|41.45,11.85770097|-29.22,4.26",
        "ADHAFERA"          : "ADHAFERA,f|S|F0,10.27817137|19.84,23.41731067|-7.3,3.43",
        "ADHARA"            : "ADHARA,f|S|B2,6.97709679|2.63,-28.97208374|2.29,1.5",
        "ADHIL"             : "ADHIL,f|S|K0,1.37233884|32.21,45.52877780|8.73,4.87",
        "AIN"               : "AIN,f|S|K0,4.47694431|107.23,19.18043154|-36.77,3.53",
        "AINALRAMI"         : "AINALRAMI,f|S|K1,18.90282698|2.95,-22.74483405|-5.7,4.86",
        "ALADFAR"           : "ALADFAR,f|S|B2,19.22930210|-1.59,39.14596820|-0.61,4.43",
        "ALASIA"            : "ALASIA,f|S|G5,18.36382867|-22.13,-11.92268329|-69.23,7.95",
        "ALBALDAH"          : "ALBALDAH,f|S|F2,19.16273140|-1.17,-21.02361486|-36.83,2.88",
        "ALBALI"            : "ALBALI,f|S|A1,20.79459762|31.89,-9.49577572|-35.32,3.78",
        "ALBIREO"           : "ALBIREO,f|S|K3,19.51202239|-7.09,27.95968112|-5.63,3.05",
        "ALCHIBA"           : "ALCHIBA,f|S|F0,12.14022694|100.18,-24.72887556|-39.33,4.02",
        "ALCOR"             : "ALCOR,f|S|A5,13.42042721|120.35,54.98795774|-16.94,3.99",
        "ALCYONE"           : "ALCYONE,f|S|B7,3.79141014|19.35,24.10513714|-43.11,2.85",
        "ALDEBARAN"         : "ALDEBARAN,f|S|K5,4.59867740|62.78,16.50930138|-189.36,0.87",
        "ALDERAMIN"         : "ALDERAMIN,f|S|A7,21.30965876|149.91,62.58557256|48.27,2.45",
        "ALDHANAB"          : "ALDHANAB,f|S|B8,21.89881235|95.88,-37.36485229|-12.1,3.0",
        "ALDHIBAH"          : "ALDHIBAH,f|S|B6,17.14644323|-20.76,65.71468332|19.15,3.17",
        "ALDULFIN"          : "ALDULFIN,f|S|B6,20.55354755|10.75,11.30326280|-28.54,4.03",
        "ALFIRK"            : "ALFIRK,f|S|B2,21.47766587|12.6,70.56071602|8.73,3.23",
        "ALGEDI"            : "ALGEDI,f|S|G6,20.30090428|61.78,-12.54485183|2.85,3.58",
        "ALGENIB"           : "ALGENIB,f|S|B2,0.22059801|4.7,15.18359590|-8.24,2.83",
        "ALGIEBA"           : "ALGIEBA,f|S|K0,10.33287623|310.77,19.84148875|-152.88,2.01",
        "ALGOL"             : "ALGOL,f|S|B8,3.13614765|2.39,40.95564766|-1.44,2.09",
        "ALGORAB"           : "ALGORAB,f|S|B9,12.49773761|-209.97,-16.51543256|-139.3,2.94",
        "ALHENA"            : "ALHENA,f|S|A0,6.62852808|-2.04,16.39925217|-66.92,1.93",
        "ALIOTH"            : "ALIOTH,f|S|A0,12.90048595|111.74,55.95982123|-8.99,1.76",
        "ALJANAH"           : "ALJANAH,f|S|K0,20.77018966|356.16,33.97025609|330.28,2.48",
        "ALKAID"            : "ALKAID,f|S|B3,13.79234379|-121.23,49.31326512|-15.56,1.85",
        "ALKALUROPS"        : "ALKALUROPS,f|S|F0,15.40817440|-147.68,37.37716679|84.69,4.31",
        "ALKAPHRAH"         : "ALKAPHRAH,f|S|A1,9.06042409|-37.37,47.15652472|-55.39,3.57",
        "ALKARAB"           : "ALKARAB,f|S|F8,23.42299560|193.12,23.40410106|36.47,4.42",
        "ALKES"             : "ALKES,f|S|K1,10.99624019|-462.39,-18.29878342|129.11,4.08",
        "ALMAAZ"            : "ALMAAZ,f|S|F0,5.03281504|0.18,43.82330835|-2.31,3.03",
        "ALMACH"            : "ALMACH,f|S|B8,2.06498696|43.08,42.32972472|-50.85,2.1",
        "ALNAIR"            : "ALNAIR,f|S|B7,22.13721819|127.6,-46.96097539|-147.91,1.73",
        "ALNASL"            : "ALNASL,f|S|K0,18.09680192|-55.75,-30.42409129|-181.53,2.98",
        "ALNILAM"           : "ALNILAM,f|S|B0,5.60355929|1.49,-1.20191983|-1.06,1.69",
        "ALNITAK"           : "ALNITAK,f|S|O9,5.67931309|3.99,-1.94257224|2.54,1.74",
        "ALNIYAT"           : "ALNIYAT,f|S|B1,16.35314334|-10.03,-25.59279641|-18.03,2.9",
        "ALPHARD"           : "ALPHARD,f|S|K3,9.45978980|-14.49,-8.65860253|33.25,1.99",
        "ALPHECCA"          : "ALPHECCA,f|S|A0,15.57813004|120.38,26.71469307|-89.44,2.22",
        "ALPHERATZ"         : "ALPHERATZ,f|S|B9,0.13979405|135.68,29.09043197|-162.95,2.07",
        "ALPHERG"           : "ALPHERG,f|S|G8,1.52472484|25.73,15.34582301|-3.29,3.62",
        "ALRAKIS"           : "ALRAKIS,f|S|F5,17.08892112|-66.0,54.47004264|73.86,4.91",
        "ALRESCHA"          : "ALRESCHA,f|S|A2,2.03411669|33.29,2.76375946|-0.42,3.82",
        "ALRUBA"            : "ALRUBA,f|S|A2,17.73310450|13.32,53.80171509|-16.35,5.75",
        "ALSAFI"            : "ALSAFI,f|S|K0,19.53933085|598.43,69.66117539|-1738.81,4.67",
        "ALSCIAUKAT"        : "ALSCIAUKAT,f|S|K5,8.38058600|-25.62,43.18813064|-99.44,4.25",
        "ALSEPHINA"         : "ALSEPHINA,f|S|A1,8.74506287|28.78,-54.70882111|-104.14,1.93",
        "ALSHAIN"           : "ALSHAIN,f|S|G8,19.92188706|46.35,6.40676348|-481.32,3.71",
        "ALSHAT"            : "ALSHAT,f|S|B9,20.34439338|15.71,-12.75907958|-14.63,4.77",
        "ALTAIR"            : "ALTAIR,f|S|A7,19.84638864|536.82,8.86832203|385.54,0.76",
        "ALTAIS"            : "ALTAIS,f|S|G9,19.20925002|94.49,67.66154129|92.3,3.07",
        "ALTERF"            : "ALTERF,f|S|K5,9.52867447|-19.38,22.96797057|-39.04,4.32",
        "ALUDRA"            : "ALUDRA,f|S|B5,7.40158404|-3.76,-29.30310360|6.66,2.45",
        "ALULA AUSTRALIS"   : "ALULA AUSTRALIS,f|S|G0,nan|nan,nan|nan,3.79",
        "ALULA BOREALIS"    : "ALULA BOREALIS,f|S|K3,11.30798244|-26.61,33.09430568|27.51,3.49",
        "ALYA"              : "ALYA,f|S|A5,18.93699511|37.69,4.20359514|26.98,4.62",
        "ALZIRR"            : "ALZIRR,f|S|F5,6.75482350|-115.16,12.89559112|-190.91,3.35",
        "AMADIOHA"          : "AMADIOHA,f|S|G8,6.22657265|148.18,-29.89726926|13.97,8.98",
        "ANCHA"             : "ANCHA,f|S|G8,22.28056567|118.95,-7.78329031|-21.91,4.17",
        "ANGETENAR"         : "ANGETENAR,f|S|K0,2.85064487|-39.0,-21.00401930|-16.63,4.76",
        "ANIARA"            : "ANIARA,f|S|K0,11.85625323|-11.24,57.64073567|-16.8,7.86",
        "ANKAA"             : "ANKAA,f|S|K0,0.43806972|232.76,-42.30598144|-353.64,2.4",
        "ANSER"             : "ANSER,f|S|M0,19.47842496|-126.45,24.66490478|-106.99,4.44",
        "ANTARES"           : "ANTARES,f|S|M1,16.49012803|-10.16,-26.43200250|-23.21,1.06",
        "ARCALÍS"           : "ARCALÍS,f|S|K0,14.88973019|44.44,18.23540122|-36.46,7.8",
        "ARCTURUS"          : "ARCTURUS,f|S|K2,14.26102001|-1093.45,19.18241038|-1999.4,-0.05",
        "ARKAB POSTERIOR"   : "ARKAB POSTERIOR,f|S|F2,19.38698247|92.78,-44.79977847|-53.73,4.27",
        "ARKAB PRIOR"       : "ARKAB PRIOR,f|S|B9,19.37730347|7.31,-44.45896465|-22.43,3.96",
        "ARNEB"             : "ARNEB,f|S|F0,5.54550442|3.27,-17.82228853|1.54,2.58",
        "ASCELLA"           : "ASCELLA,f|S|A3,19.04353166|-14.1,-29.88010539|3.66,2.6",
        "ASELLUS AUSTRALIS" : "ASELLUS AUSTRALIS,f|S|K0,8.74474989|-17.1,18.15430872|-228.46,3.94",
        "ASELLUS BOREALIS"  : "ASELLUS BOREALIS,f|S|A1,8.72142946|-106.94,21.46850070|-39.25,4.66",
        "ASHLESHA"          : "ASHLESHA,f|S|G0,8.77958628|-231.04,6.41880928|-40.17,3.38",
        "ASPIDISKE"         : "ASPIDISKE,f|S|A8,9.28483519|-19.03,-59.27522929|13.11,2.21",
        "ASTEROPE"          : "ASTEROPE,f|S|B8,3.76513231|19.44,24.55451103|-45.36,5.76",
        "ATHEBYNE"          : "ATHEBYNE,f|S|G8,16.39985725|-16.98,61.51421318|56.68,2.73",
        "ATIK"              : "ATIK,f|S|B1,3.73864779|8.11,32.28824817|-10.32,3.84",
        "ATLAS"             : "ATLAS,f|S|B8,3.81937293|17.77,24.05341547|-44.7,3.62",
        "ATRIA"             : "ATRIA,f|S|K2,16.81108191|17.85,-69.02771505|-32.92,1.91",
        "AVIOR"             : "AVIOR,f|S|K3,8.37523211|-25.34,-59.50948307|22.72,1.86",
        "AXÓLOTL"           : "AXÓLOTL,f|S|G2,23.99828691|148.74,-22.42811338|27.53,8.23",
        "AYEYARWADY"        : "AYEYARWADY,f|S|G8,3.00296038|-18.14,-20.80260369|-22.2,7.81",
        "AZELFAFAGE"        : "AZELFAFAGE,f|S|B3,21.70157349|5.25,51.18962197|-2.11,4.69",
        "AZHA"              : "AZHA,f|S|K1,2.94045824|77.73,-8.89814444|-219.99,3.89",
        "AZMIDI"            : "AZMIDI,f|S|G6,7.82157088|-5.56,-24.85978574|-0.71,3.34",
        "BAEKDU"            : "BAEKDU,f|S|K0,14.94676480|13.5,74.90092704|5.65,6.83",
        "BARNARD'S STAR"    : "BARNARD'S STAR,f|S|sd,17.96347189|-797.84,4.69338850|10326.93,9.54",
        "BATEN KAITOS"      : "BATEN KAITOS,f|S|K2,1.85767600|38.78,-10.33503771|-38.04,3.74",
        "BEEMIM"            : "BEEMIM,f|S|K4,4.40061591|73.77,-34.01684638|57.57,3.97",
        "BEID"              : "BEID,f|S|F2,4.19776117|11.92,-6.83758113|81.28,4.04",
        "BELEL"             : "BELEL,f|S|K0,19.35117539|-45.15,-23.61957158|-31.23,7.55",
        "BÉLÉNOS"           : "BÉLÉNOS,f|S|F8,1.42014355|252.59,28.56669327|-158.59,7.12",
        "BELLATRIX"         : "BELLATRIX,f|S|B2,5.41885085|-8.75,6.34970223|-13.28,1.64",
        "BETELGEUSE"        : "BETELGEUSE,f|S|M2,5.91952924|27.33,7.40706274|10.86,0.45",
        "BHARANI"           : "BHARANI,f|S|B8,2.83306454|65.47,27.26050705|-116.59,3.61",
        "BIBHĀ"             : "BIBHĀ,f|S|F8,9.93497729|-67.22,-3.80842180|17.02,8.73",
        "BIHAM"             : "BIHAM,f|S|A2,22.16999589|281.96,6.19786491|31.23,3.52",
        "BOSONA"            : "BOSONA,f|S|K0,21.72358349|3.19,-7.40825263|2.3,8.34",
        "BOTEIN"            : "BOTEIN,f|S|K2,3.19382374|154.61,19.72667737|-8.39,4.35",
        "BRACHIUM"          : "BRACHIUM,f|S|M3,15.06783765|-71.85,-25.28196465|-44.69,3.25",
        "BUBUP"             : "BUBUP,f|S|WN,5.61722692|138.79,-73.69934279|-107.29,6.69",
        "BUNA"              : "BUNA,f|S|G0,2.61719750|-38.74,42.06263305|-39.91,7.28",
        "BUNDA"             : "BUNDA,f|S|A7,21.62919704|114.29,-7.85420152|-24.44,4.68",
        "CANOPUS"           : "CANOPUS,f|S|F0,6.39919718|19.99,-52.69566045|23.67,-0.62",
        "CAPELLA"           : "CAPELLA,f|S|M1,5.27815528|75.52,45.99799106|-427.13,0.08",
        "CAPH"              : "CAPH,f|S|F2,0.15296808|523.39,59.14977950|-180.42,2.28",
        "CASTOR"            : "CASTOR,f|S|A2,7.57662855|-206.33,31.88827631|-148.18,1.58",
        "CASTULA"           : "CASTULA,f|S|G8,0.94441809|-92.56,59.18105562|-45.33,4.62",
        "CEBALRAI"          : "CEBALRAI,f|S|K2,17.72454254|-40.67,4.56730283|158.8,2.76",
        "CEIBO"             : "CEIBO,f|S|K4,7.65606974|-20.65,-78.27897234|-39.69,9.37",
        "CELAENO"           : "CELAENO,f|S|B7,3.74672650|20.73,24.28947017|-44.0,5.45",
        "CERVANTES"         : "CERVANTES,f|S|G5,17.73575080|-15.06,-51.83405304|-191.17,5.12",
        "CHALAWAN"          : "CHALAWAN,f|S|G0,10.99110380|-315.92,40.43025694|55.15,5.03",
        "CHAMUKUY"          : "CHAMUKUY,f|S|A7,4.47770578|108.66,15.87088265|-26.39,3.4",
        "CHARA"             : "CHARA,f|S|G0,12.56237350|-705.06,41.35747994|292.93,4.24",
        "CHECHIA"           : "CHECHIA,f|S|G5,20.26833451|-40.72,4.58079531|-51.16,6.44",
        "CHERTAN"           : "CHERTAN,f|S|A2,11.23733477|-59.01,15.42957020|-79.37,3.33",
        "CITADELLE"         : "CITADELLE,f|S|K0,0.32140731|75.0,14.05475546|-17.55,8.36",
        "CITALÁ"            : "CITALÁ,f|S|G0,7.00501007|-115.76,-5.36716190|80.35,6.29",
        "COCIBOLCA"         : "COCIBOLCA,f|S|G5,0.74073621|313.52,-26.51568011|150.0,7.78",
        "COPERNICUS"        : "COPERNICUS,f|S|G8,8.87661420|-485.48,28.33081875|-234.4,5.96",
        "COR CAROLI"        : "COR CAROLI,f|S|A0,12.93379649|-233.43,38.31837984|54.98,2.89",
        "CUJAM"             : "CUJAM,f|S|B9,16.42359813|39.39,14.03326958|-59.89,4.57",
        "CURSA"             : "CURSA,f|S|A3,5.13082919|-83.39,-5.08644617|-75.44,2.78",
        "DABIH"             : "DABIH,f|S|A5,20.35018768|48.42,-14.78136716|14.0,3.05",
        "DALIM"             : "DALIM,f|S|F8,3.20125770|371.49,-28.98761801|612.26,3.8",
        "DENEB"             : "DENEB,f|S|A2,20.69053187|1.56,45.28033800|1.55,1.25",
        "DENEB ALGEDI"      : "DENEB ALGEDI,f|S|A5,21.78401255|263.26,-16.12728590|-296.23,2.85",
        "DENEBOLA"          : "DENEBOLA,f|S|A3,11.81766043|-499.02,14.57206038|-113.78,2.14",
        "DIADEM"            : "DIADEM,f|S|F5,13.16646573|-445.95,17.52943149|129.69,4.32",
        "DINGOLAY"          : "DINGOLAY,f|S|K0,11.07901497|26.46,-2.51321786|-17.52,8.21",
        "DIPHDA"            : "DIPHDA,f|S|K0,0.72649196|232.79,-17.98660457|32.71,2.04",
        "DOFIDA"            : "DOFIDA,f|S|G2,13.54043211|25.04,-47.27136289|-124.63,7.17",
        "DSCHUBBA"          : "DSCHUBBA,f|S|B0,16.00555730|-8.67,-22.62170993|-36.9,2.29",
        "DUBHE"             : "DUBHE,f|S|F7,11.06213019|-136.46,61.75103324|-35.25,1.81",
        "DZIBAN"            : "DZIBAN,f|S|F5,17.69898826|26.6,72.14884351|-269.77,4.57",
        "EBLA"              : "EBLA,f|S|K3,23.15297986|632.15,-2.26074180|-96.23,8.59",
        "EDASICH"           : "EDASICH,f|S|K2,15.41549299|-8.27,58.96606564|17.3,3.29",
        "ELECTRA"           : "ELECTRA,f|S|B6,3.74792703|21.55,24.11333922|-44.92,3.72",
        "ELGAFAR"           : "ELGAFAR,f|S|G2,14.47003835|-140.94,-2.22795718|-2.92,4.81",
        "ELKURUD"           : "ELKURUD,f|S|B8,6.12545355|0.9,-37.25292041|0.3,5.0",
        "ELNATH"            : "ELNATH,f|S|B7,5.43819816|23.28,28.60745000|-174.22,1.65",
        "ELTANIN"           : "ELTANIN,f|S|K5,17.94343608|-8.52,51.48889500|-23.05,2.24",
        "EMIW"              : "EMIW,f|S|K0,1.17978409|111.79,-66.18816407|-123.84,8.06",
        "ENIF"              : "ENIF,f|S|K2,21.73643281|30.02,9.87501126|1.38,2.38",
        "ERRAI"             : "ERRAI,f|S|K1,23.65579141|-48.85,77.63227580|127.18,3.21",
        "FAFNIR"            : "FAFNIR,f|S|K2,18.43309393|106.52,65.56348049|-27.07,4.82",
        "FANG"              : "FANG,f|S|B1,15.98086469|-12.0,-26.11410529|-25.71,2.89",
        "FAWARIS"           : "FAWARIS,f|S|B9,19.74957718|43.22,45.13080969|48.44,2.86",
        "FELIS"             : "FELIS,f|S|K5,9.91450241|-46.09,-19.00935988|-37.04,4.94",
        "FELIXVARELA"       : "FELIXVARELA,f|S|K5,0.47619614|-354.87,-16.22634411|-228.26,9.62",
        "FLEGETONTE"        : "FLEGETONTE,f|S|K0,11.76174777|-190.32,2.82148337|-111.44,8.07",
        "FOMALHAUT"         : "FOMALHAUT,f|S|A3,22.96084626|329.22,-29.62223601|-164.22,1.17",
        "FORMOSA"           : "FORMOSA,f|S|G9,11.58437609|-58.6,20.44154534|-1.19,6.45",
        "FULU"              : "FULU,f|S|B2,0.61619017|17.77,53.89690936|-9.15,3.69",
        "FUMALSAMAKAH"      : "FUMALSAMAKAH,f|S|B6,23.06461501|12.86,3.82004536|-10.13,4.48",
        "FUNI"              : "FUNI,f|S|G0,12.53533019|-171.02,74.48955134|-46.61,8.75",
        "FURUD"             : "FURUD,f|S|B2,6.33855348|8.0,-30.06336729|3.81,3.02",
        "FUYUE"             : "FUYUE,f|S|K0,17.83096723|42.09,-37.04330356|27.77,3.19",
        "GACRUX"            : "GACRUX,f|S|M4,12.51943314|27.94,-57.11321175|-264.33,1.59",
        "GAKYID"            : "GAKYID,f|S|G5,8.65438987|-113.68,12.96037536|-93.19,8.23",
        "GIAUSAR"           : "GIAUSAR,f|S|M0,11.52339458|-41.14,69.33107596|-18.79,3.82",
        "GIENAH"            : "GIENAH,f|S|B8,12.26343617|-159.58,-17.54192948|22.31,2.58",
        "GINAN"             : "GINAN,f|S|K3,12.35600257|-171.06,-60.40114673|91.82,3.59",
        "GOMEISA"           : "GOMEISA,f|S|B8,7.45251184|-50.28,8.28931548|-38.45,2.89",
        "GRUMIUM"           : "GRUMIUM,f|S|K2,17.89214708|93.65,56.87264284|78.44,3.73",
        "GUDJA"             : "GUDJA,f|S|M1,15.81232690|-51.78,18.14156367|-88.72,4.09",
        "GUMALA"            : "GUMALA,f|S|F8,19.25922995|114.78,-24.17935216|-101.81,6.25",
        "GUNIIBUU"          : "GUNIIBUU,f|S|K2,17.25582731|-473.69,-26.60282938|-1143.93,4.33",
        "HADAR"             : "HADAR,f|S|B1,14.06372347|-33.96,-60.37303932|-25.06,0.61",
        "HAEDUS"            : "HAEDUS,f|S|B3,5.10858133|30.6,41.23447446|-68.41,3.18",
        "HAMAL"             : "HAMAL,f|S|K2,2.11955753|190.73,23.46242310|-145.77,2.01",
        "HASSALEH"          : "HASSALEH,f|S|K3,4.94989410|3.63,33.16609030|-18.54,2.69",
        "HATYSA"            : "HATYSA,f|S|O9,5.59055069|2.27,-5.90990135|-0.62,2.75",
        "HELVETIOS"         : "HELVETIOS,f|S|G5,22.95777236|208.06,20.76883224|60.96,5.45",
        "HEZE"              : "HEZE,f|S|A3,13.57822001|-278.89,-0.59582017|48.56,3.38",
        "HOGGAR"            : "HOGGAR,f|S|K0,4.52373699|0.22,4.57528742|-12.85,8.38",
        "HOMAM"             : "HOMAM,f|S|B8,22.69103355|77.38,10.83136442|-10.98,3.41",
        "HUNAHPÚ"           : "HUNAHPÚ,f|S|K0,11.29654244|-131.11,-23.97541422|-16.25,8.05",
        "HUNOR"             : "HUNOR,f|S|F8,16.34343255|-10.64,41.04808374|-29.7,8.72",
        "IKLIL"             : "IKLIL,f|S|B2,15.94807680|-15.2,-29.21407322|-25.1,3.87",
        "ILLYRIAN"          : "ILLYRIAN,f|S|G0,9.59588422|15.05,34.78074246|-34.95,7.62",
        "IMAI"              : "IMAI,f|S|B2,12.25242103|-36.68,-58.74892786|-10.72,2.79",
        "INQUILL"           : "INQUILL,f|S|G1,17.33094422|-35.37,-48.54931896|-209.84,6.67",
        "INTAN"             : "INTAN,f|S|K3,3.34519287|293.78,-33.73010380|95.99,9.92",
        "INTERCRUS"         : "INTERCRUS,f|S|K0,9.47777481|-6.4,45.60148311|-128.2,5.4",
        "ITONDA"            : "ITONDA,f|S|G2,21.95551327|101.45,-37.76362147|-117.99,7.47",
        "IZAR"              : "IZAR,f|S|A0,14.74978270|-50.65,27.07422246|20.0,2.35",
        "JABBAH"            : "JABBAH,f|S|B2,16.19992625|-9.7,-19.46070821|-25.25,4.0",
        "JISHUI"            : "JISHUI,f|S|F3,7.65275858|-35.97,34.58434600|-118.03,4.89",
        "KAFFALJIDHMA"      : "KAFFALJIDHMA,f|S|A3,2.72167750|-146.43,3.23581854|-145.27,3.47",
        "KALAUSI"           : "KALAUSI,f|S|K0,9.61995223|22.35,-43.27220534|-120.76,8.23",
        "KAMUY"             : "KAMUY,f|S|K0,16.16775398|-18.35,26.74274976|37.66,6.57",
        "KANG"              : "KANG,f|S|K3,14.21492938|8.04,-10.27370180|140.79,4.18",
        "KARAKA"            : "KARAKA,f|S|K0,15.59442469|-47.57,-80.20458692|44.04,8.71",
        "KAUS AUSTRALIS"    : "KAUS AUSTRALIS,f|S|B9,18.40286620|-39.61,-34.38461611|-124.05,1.79",
        "KAUS BOREALIS"     : "KAUS BOREALIS,f|S|K1,18.46617794|-44.81,-25.42170011|-186.29,2.82",
        "KAUS MEDIA"        : "KAUS MEDIA,f|S|K3,18.34990049|29.96,-29.82810326|-26.38,2.72",
        "KAVEH"             : "KAVEH,f|S|G8,18.92802325|-7.84,4.26532475|-89.86,8.02",
        "KEID"              : "KEID,f|S|K1,4.25453335|-2239.33,-7.65287049|-3419.86,4.43",
        "KHAMBALIA"         : "KHAMBALIA,f|S|A1,14.31849766|-17.12,-13.37109491|29.39,4.52",
        "KITALPHA"          : "KITALPHA,f|S|G0,21.26373102|59.63,5.24784463|-94.33,3.92",
        "KOCHAB"            : "KOCHAB,f|S|K4,14.84509068|-32.29,74.15550496|11.91,2.07",
        "KOEIA"             : "KOEIA,f|S|M0,2.77857938|292.67,-23.08661098|141.42,10.25",
        "KORNEPHOROS"       : "KORNEPHOROS,f|S|G8,16.50366666|-98.43,21.48961330|-14.49,2.78",
        "KRAZ"              : "KRAZ,f|S|G5,12.57312073|0.86,-23.39675918|-56.0,2.65",
        "KURHAH"            : "KURHAH,f|S|Am,22.06318163|214.46,64.62797123|89.29,4.26",
        "LA SUPERBA"        : "LA SUPERBA,f|S|C7,12.75217416|-2.2,45.44025620|13.05,5.42",
        "LARAWAG"           : "LARAWAG,f|S|K2,16.83605917|-611.83,-34.29323174|-255.87,2.29",
        "LESATH"            : "LESATH,f|S|B2,17.51273215|-4.19,-37.29581099|-29.14,2.7",
        "LIBERTAS"          : "LIBERTAS,f|S|K0,19.90413378|101.43,8.46145272|-81.28,4.71",
        "LIESMA"            : "LIESMA,f|S|K0,13.56737151|-87.84,53.72852903|-78.43,8.05",
        "LILII BOREA"       : "LILII BOREA,f|S|K1,2.79848352|148.42,29.24711817|-125.76,4.52",
        "LIONROCK"          : "LIONROCK,f|S|G8,22.45085322|-86.69,-17.26365757|-104.35,7.6",
        "LUCILINBURHUC"     : "LUCILINBURHUC,f|S|G5,6.47936397|-43.8,38.96296304|-53.45,7.89",
        "LUSITÂNIA"         : "LUSITÂNIA,f|S|K5,6.48699768|206.14,10.93389140|-62.69,8.1",
        "MAASYM"            : "MAASYM,f|S|K3,17.51230832|18.39,26.11064529|16.78,4.41",
        "MACONDO"           : "MACONDO,f|S|K3,10.73914303|-92.84,-33.57702200|-151.12,8.3",
        "MAGO"              : "MAGO,f|S|K1,5.16019980|60.42,69.63940122|-63.55,6.43",
        "MAHASIM"           : "MAHASIM,f|S|A0,5.99535249|42.09,37.21258517|-73.61,2.65",
        "MAHSATI"           : "MAHSATI,f|S|K0,16.89543956|11.29,11.97374628|-15.3,8.38",
        "MAIA"              : "MAIA,f|S|B8,3.76377962|21.09,24.36774851|-45.03,3.87",
        "MARFIK"            : "MARFIK,f|S|A2,16.51522859|-31.37,1.98392314|-73.0,3.82",
        "MARKAB"            : "MARKAB,f|S|B9,23.07934827|61.1,15.20526441|-42.56,2.49",
        "MARKEB"            : "MARKEB,f|S|B2,9.36856064|-10.72,-55.01066799|11.24,2.47",
        "MARSIC"            : "MARSIC,f|S|G8,16.13459044|-34.29,17.04698023|-5.46,5.0",
        "MATAR"             : "MATAR,f|S|G2,22.71670484|13.11,30.22124519|-26.11,2.93",
        "MEBSUTA"           : "MEBSUTA,f|S|A3,6.73220166|-5.93,25.13112417|-12.81,3.06",
        "MEGREZ"            : "MEGREZ,f|S|A3,12.25710003|103.56,57.03261698|7.81,3.32",
        "MEISSA"            : "MEISSA,f|S|O.,5.58563253|-1.03,9.93415842|-1.86,3.39",
        "MEKBUDA"           : "MEKBUDA,f|S|G3,7.06848106|-5.72,20.57029706|-0.96,4.01",
        "MELEPH"            : "MELEPH,f|S|Am,8.67416989|-33.74,19.54480758|-13.57,6.29",
        "MENKALINAN"        : "MENKALINAN,f|S|A2,5.99214525|-56.41,44.94743277|-0.88,1.9",
        "MENKAR"            : "MENKAR,f|S|M2,3.03799227|-11.81,4.08973396|-78.76,2.54",
        "MENKENT"           : "MENKENT,f|S|K0,14.11137457|-519.29,-36.36995451|-517.87,2.06",
        "MENKIB"            : "MENKIB,f|S|O7,3.98275031|1.92,35.79103260|2.3,3.98",
        "MERAK"             : "MERAK,f|S|A1,11.03068799|81.66,56.38242685|33.74,2.34",
        "MERGA"             : "MERGA,f|S|F7,14.82185257|-7.35,46.11620546|-77.32,5.76",
        "MERIDIANA"         : "MERIDIANA,f|S|A0,19.15787270|85.73,-37.90447444|-96.65,4.11",
        "MEROPE"            : "MEROPE,f|S|B6,3.77210384|21.17,23.94835835|-42.67,4.14",
        "MESARTHIM"         : "MESARTHIM,f|S|A1,1.89217064|79.43,19.29385176|-99.1,3.88",
        "MIAPLACIDUS"       : "MIAPLACIDUS,f|S|A2,9.21999318|-157.66,-69.71720776|108.91,1.67",
        "MIMOSA"            : "MIMOSA,f|S|B0,12.79535087|-48.24,-59.68876364|-12.82,1.25",
        "MINCHIR"           : "MINCHIR,f|S|K2,8.64595491|-19.03,3.34143518|-16.29,4.45",
        "MINELAUVA"         : "MINELAUVA,f|S|M3,12.92672439|-471.44,3.39747027|-52.81,3.39",
        "MINTAKA"           : "MINTAKA,f|S|O9,5.53344464|1.67,-0.29909204|0.56,2.25",
        "MIRA"              : "MIRA,f|S|M5,2.32244241|10.33,-2.97764262|-239.48,6.47",
        "MIRACH"            : "MIRACH,f|S|M0,1.16220100|175.59,35.62055768|-112.23,2.07",
        "MIRAM"             : "MIRAM,f|S|K3,2.84494725|16.64,55.89549610|-13.76,3.77",
        "MIRFAK"            : "MIRFAK,f|S|F5,3.40538065|24.11,49.86117958|-26.01,1.79",
        "MIRZAM"            : "MIRZAM,f|S|B1,6.37832924|-3.45,-17.95591772|-0.47,1.98",
        "MISAM"             : "MISAM,f|S|K0,3.15826985|173.01,44.85754366|-142.05,3.79",
        "MIZAR"             : "MIZAR,f|S|A2,13.39876192|121.23,54.92536183|-22.01,2.23",
        "MÖNCH"             : "MÖNCH,f|S|K0,14.79242414|-129.6,-0.28147601|-140.79,8.04",
        "MOTHALLAH"         : "MOTHALLAH,f|S|F6,1.88469664|12.02,29.57882923|-233.69,3.42",
        "MOUHOUN"           : "MOUHOUN,f|S|K0,4.83829499|18.86,-24.36883944|-18.12,7.91",
        "MULIPHEIN"         : "MULIPHEIN,f|S|B8,7.06263686|-0.81,-15.63328598|-11.2,4.11",
        "MUPHRID"           : "MUPHRID,f|S|G0,13.91141076|-60.95,18.39771712|-358.1,2.68",
        "MUSCIDA"           : "MUSCIDA,f|S|G4,8.50440832|-134.31,60.71816927|-107.73,3.35",
        "MUSICA"            : "MUSICA,f|S|G6,20.97387069|-47.95,10.83928601|-34.35,5.51",
        "NAHN"              : "NAHN,f|S|K0,9.15598156|-0.48,22.04544558|-0.7,5.16",
        "NAOS"              : "NAOS,f|S|O5,8.05973519|-30.82,-40.00314770|16.77,2.21",
        "NASHIRA"           : "NASHIRA,f|S|A7,21.66818232|187.39,-16.66230769|-22.33,3.69",
        "NÁSTI"             : "NÁSTI,f|S|G0,8.30615918|128.33,61.46072198|31.73,8.2",
        "NATASHA"           : "NATASHA,f|S|K1,9.83402690|24.57,-49.79026629|-59.83,8.54",
        "NEKKAR"            : "NEKKAR,f|S|G8,15.03243398|-40.2,40.39056571|-29.22,3.49",
        "NEMBUS"            : "NEMBUS,f|S|K3,1.63321003|60.9,48.62821314|-112.42,3.59",
        "NENQUE"            : "NENQUE,f|S|G3,1.07781975|-168.97,-39.48821741|-527.71,7.72",
        "NERVIA"            : "NERVIA,f|S|G0,6.85847677|34.96,40.86775639|-122.85,8.1",
        "NGANURGANITY"      : "NGANURGANITY,f|S|K4,7.02865215|-6.01,-27.93483037|4.64,3.49",
        "NIHAL"             : "NIHAL,f|S|G5,5.47075644|-5.03,-20.75944096|-85.92,2.81",
        "NIKAWIY"           : "NIKAWIY,f|S|G5,15.31838394|-19.72,41.73320673|-181.65,7.88",
        "NOSAXA"            : "NOSAXA,f|S|G5,6.66714638|26.51,-48.54195518|30.06,8.05",
        "NUNKI"             : "NUNKI,f|S|B2,18.92109048|13.87,-26.29672225|-52.65,2.05",
        "NUSAKAN"           : "NUSAKAN,f|S|F0,15.46381412|-181.39,29.10570274|86.84,3.66",
        "NUSHAGAK"          : "NUSHAGAK,f|S|G5,2.82902432|91.0,71.75323214|-32.45,8.17",
        "OGMA"              : "OGMA,f|S|G0,16.50822756|-77.12,38.34730960|53.34,8.15",
        "OKAB"              : "OKAB,f|S|A0,19.09016895|-7.04,13.86347818|-95.31,2.99",
        "PAIKAUHALE"        : "PAIKAUHALE,f|S|B0,16.59804270|-8.59,-28.21601625|-22.5,2.82",
        "PEACOCK"           : "PEACOCK,f|S|B2,20.42746051|7.71,-56.73509009|-86.15,1.94",
        "PHACT"             : "PHACT,f|S|B7,5.66081663|-0.1,-34.07410786|-24.05,2.65",
        "PHECDA"            : "PHECDA,f|S|A0,11.89717984|107.76,53.69476015|11.16,2.41",
        "PHERKAD"           : "PHERKAD,f|S|A3,15.34547652|-18.03,71.83401606|17.68,3.0",
        "PHOENICIA"         : "PHOENICIA,f|S|K0,20.23329033|-63.37,-0.86687696|262.26,7.79",
        "PIAUTOS"           : "PIAUTOS,f|S|B9,8.34226003|-20.67,24.02231363|-17.84,5.92",
        "PINCOYA"           : "PINCOYA,f|S|K2,18.05192596|-32.48,-28.56064340|-38.34,9.62",
        "PIPIRIMA"          : "PIPIRIMA,f|S|B2,16.87226221|-12.92,-38.01753566|-23.8,3.56",
        "PLEIONE"           : "PLEIONE,f|S|B7,3.81978223|18.71,24.13671204|-46.74,5.05",
        "POERAVA"           : "POERAVA,f|S|F7,23.52231637|181.4,-58.20973269|-5.59,7.82",
        "POLARIS"           : "POLARIS,f|S|F7,2.53030100|44.22,89.26410949|-11.74,1.97",
        "POLARIS AUSTRALIS" : "POLARIS AUSTRALIS,f|S|F0,21.14634609|25.96,-88.95649899|5.02,5.45",
        "POLIS"             : "POLIS,f|S|B2,18.22939161|1.72,-21.05883369|-1.39,3.84",
        "POLLUX"            : "POLLUX,f|S|K0,7.75526397|-625.69,28.02619865|-45.95,1.16",
        "PORRIMA"           : "PORRIMA,f|S|F0,12.69434508|-616.66,-1.44937485|60.66,2.74",
        "PRAECIPUA"         : "PRAECIPUA,f|S|K0,10.88852919|92.47,34.21487116|-286.06,3.79",
        "PRIMA HYADUM"      : "PRIMA HYADUM,f|S|G8,4.32988992|115.29,15.62764231|-23.86,3.65",
        "PROCYON"           : "PROCYON,f|S|F5,7.65503283|-716.57,5.22499314|-1034.58,0.4",
        "PROPUS"            : "PROPUS,f|S|M3,6.24796033|-62.53,22.50679887|-10.24,3.31",
        "PROXIMA CENTAURI"  : "PROXIMA CENTAURI,f|S|M5,14.49526359|-3775.64,-62.67948489|768.16,11.01",
        "RAN"               : "RAN,f|S|K2,3.54884558|-976.44,-9.45826199|17.97,3.72",
        "RANA"              : "RANA,f|S|K0,3.72080605|-91.71,-9.76339459|742.23,3.52",
        "RAPETO"            : "RAPETO,f|S|G2,17.07524210|111.41,-43.30976989|-141.49,7.39",
        "RASALAS"           : "RASALAS,f|S|K0,9.87939369|-216.29,26.00695151|-54.92,3.88",
        "RASALGETHI"        : "RASALGETHI,f|S|M5,17.24412734|-6.71,14.39033282|32.78,2.78",
        "RASALHAGUE"        : "RASALHAGUE,f|S|A5,17.58224183|110.08,12.56003481|-222.61,2.08",
        "RASTABAN"          : "RASTABAN,f|S|G2,17.50721168|-15.59,52.30138714|11.57,2.79",
        "REGULUS"           : "REGULUS,f|S|B7,10.13953074|-249.4,11.96720709|4.91,1.36",
        "REVATI"            : "REVATI,f|S|A7,1.22885715|141.66,7.57535376|-55.62,5.21",
        "RIGEL"             : "RIGEL,f|S|B8,5.24229787|1.87,-8.20164055|-0.56,0.18",
        "RIGIL KENTAURUS"   : "RIGIL KENTAURUS,f|S|G2,14.66013779|-3678.19,-60.83397588|481.84,-0.01",
        "ROSALÍADECASTRO"   : "ROSALÍADECASTRO,f|S|G0,16.54751383|-10.06,2.08483188|-85.03,7.89",
        "ROTANEV"           : "ROTANEV,f|S|F5,20.62581697|118.28,14.59508708|-47.65,3.64",
        "RUCHBAH"           : "RUCHBAH,f|S|A5,1.43026453|297.24,60.23528312|-49.49,2.66",
        "RUKBAT"            : "RUKBAT,f|S|B8,19.39810458|32.67,-40.61593992|-120.81,3.96",
        "SABIK"             : "SABIK,f|S|A2,17.17296871|41.16,-15.72491023|97.65,2.43",
        "SACLATENI"         : "SACLATENI,f|S|K4,5.04130192|8.88,41.07583744|-21.43,3.69",
        "SADACHBIA"         : "SADACHBIA,f|S|A0,22.36093761|129.24,-1.38733151|8.9,3.86",
        "SADALBARI"         : "SADALBARI,f|S|M2,22.83338689|144.11,24.60157926|-43.44,3.51",
        "SADALMELIK"        : "SADALMELIK,f|S|G2,22.09639881|17.9,-0.31985069|-9.93,2.95",
        "SADALSUUD"         : "SADALSUUD,f|S|G0,21.52598168|22.79,-5.57117221|-6.7,2.9",
        "SADR"              : "SADR,f|S|F8,20.37047275|2.43,40.25667924|-0.93,2.23",
        "SAGARMATHA"        : "SAGARMATHA,f|S|K0,11.59764539|-10.39,-4.75569708|33.45,8.42",
        "SAIPH"             : "SAIPH,f|S|B0,5.79594135|1.55,-9.66960477|-1.2,2.07",
        "SALM"              : "SALM,f|S|A5,23.34395628|30.48,23.74033697|-9.14,4.58",
        "SĀMAYA"            : "SĀMAYA,f|S|F7,21.63566820|23.46,-31.73748475|-82.19,8.56",
        "SARGAS"            : "SARGAS,f|S|F1,17.62198073|6.06,-42.99782386|-0.95,1.86",
        "SARIN"             : "SARIN,f|S|A3,17.25053072|-21.14,24.83920417|-157.68,3.12",
        "SCEPTRUM"          : "SCEPTRUM,f|S|K1,4.63634002|-77.86,-14.30401977|-178.06,3.86",
        "SCHEAT"            : "SCHEAT,f|S|M2,23.06290487|187.76,28.08278908|137.61,2.44",
        "SCHEDAR"           : "SCHEDAR,f|S|K0,0.67512237|50.36,56.53733107|-32.17,2.24",
        "SECUNDA HYADUM"    : "SECUNDA HYADUM,f|S|G8,4.38224812|107.75,17.54251420|-28.84,3.77",
        "SEGIN"             : "SEGIN,f|S|B2,1.90659042|31.98,63.67010149|-18.66,3.35",
        "SEGINUS"           : "SEGINUS,f|S|A7,14.53463109|-115.55,38.30825266|151.87,3.04",
        "SHAM"              : "SHAM,f|S|G0,19.66827550|15.09,18.01389046|-19.72,4.39",
        "SHAMA"             : "SHAMA,f|S|K0,11.40482167|-179.71,-1.52907621|-160.61,9.1",
        "SHARJAH"           : "SHARJAH,f|S|  ,16.21160402|24.12,-18.87550342|-210.89,11.34",
        "SHAULA"            : "SHAULA,f|S|B1,17.56014444|-8.9,-37.10382115|-29.95,1.62",
        "SHELIAK"           : "SHELIAK,f|S|A8,18.83466519|1.1,33.36266704|-4.46,3.52",
        "SHERATAN"          : "SHERATAN,f|S|A5,1.91066921|96.32,20.80803502|-108.8,2.64",
        "SIKA"              : "SIKA,f|S|G1,19.38138497|89.37,-32.91905421|-415.97,7.84",
        "SIRIUS"            : "SIRIUS,f|S|A0,6.75247697|-546.01,-16.71611569|-1223.08,-1.44",
        "SITULA"            : "SITULA,f|S|K2,22.62927251|-68.36,-4.22805571|-120.47,5.04",
        "SKAT"              : "SKAT,f|S|A3,22.91083681|-44.08,-15.82082023|-24.81,3.27",
        "SOLARIS"           : "SOLARIS,f|S|K5,21.22666437|236.44,14.68938723|1.2,9.78",
        "SPICA"             : "SPICA,f|S|B1,13.41988313|-42.5,-11.16132203|-31.73,0.98",
        "STRIBOR"           : "STRIBOR,f|S|G0,8.89744586|-95.6,33.05681157|-28.24,8.03",
        "SUALOCIN"          : "SUALOCIN,f|S|B9,20.66063539|54.14,15.91207193|7.91,3.77",
        "SUBRA"             : "SUBRA,f|S|A5,9.68584244|-143.67,9.89230801|-37.45,3.52",
        "SUHAIL"            : "SUHAIL,f|S|K4,9.13326624|-23.21,-43.43258935|14.28,2.23",
        "SULAFAT"           : "SULAFAT,f|S|B9,18.98239518|-2.76,32.68955742|1.77,3.25",
        "SYRMA"             : "SYRMA,f|S|F7,14.26690827|-25.84,-6.00054666|-419.84,4.07",
        "TABIT"             : "TABIT,f|S|F6,4.83066959|463.44,6.96127569|11.62,3.19",
        "TAIYANGSHOU"       : "TAIYANGSHOU,f|S|K0,11.76750389|-138.38,47.77940599|28.37,3.69",
        "TAIYI"             : "TAIYI,f|S|A5,12.92459684|-4.63,65.43847366|-30.38,5.23",
        "TALITHA"           : "TALITHA,f|S|A7,8.98679273|-441.12,48.04182653|-215.21,3.12",
        "TANIA AUSTRALIS"   : "TANIA AUSTRALIS,f|S|M0,10.37215016|-80.47,41.49951640|34.1,3.06",
        "TANIA BOREALIS"    : "TANIA BOREALIS,f|S|A2,10.28494207|-170.11,42.91436494|-42.64,3.45",
        "TAPECUE"           : "TAPECUE,f|S|G6,7.79714401|147.22,-54.26414479|-278.72,8.1",
        "TARAZED"           : "TARAZED,f|S|K3,19.77099430|15.72,10.61326121|-3.08,2.72",
        "TARF"              : "TARF,f|S|K4,8.27525572|-46.8,9.18554471|-48.65,3.53",
        "TAYGETA"           : "TAYGETA,f|S|B6,3.75347069|19.35,24.46727760|-41.63,4.3",
        "TEGMINE"           : "TEGMINE,f|S|G0,8.20353504|28.29,17.64777071|-150.94,4.67",
        "TEJAT"             : "TEJAT,f|S|M3,6.38267417|56.84,22.51358585|-108.79,2.87",
        "TEREBELLUM"        : "TEREBELLUM,f|S|G3,19.93065494|203.96,-26.29950633|74.4,4.7",
        "THEEMIN"           : "THEEMIN,f|S|G8,4.59251071|-48.92,-30.56234146|-12.75,3.81",
        "THUBAN"            : "THUBAN,f|S|A0,14.07315271|-56.52,64.37585053|17.19,3.67",
        "TIAKI"             : "TIAKI,f|S|M5,22.71112519|135.68,-46.88457687|-4.51,2.07",
        "TIANGUAN"          : "TIANGUAN,f|S|B4,5.62741271|2.39,21.14254914|-18.04,2.97",
        "TIANYI"            : "TIANYI,f|S|K5,12.79287327|1.64,66.79030429|-4.71,5.43",
        "TIMIR"             : "TIMIR,f|S|K0,16.47448649|-37.09,-13.39964012|1.45,6.89",
        "TITAWIN"           : "TITAWIN,f|S|F8,1.61328966|-172.57,41.40545875|-381.01,4.1",
        "TOLIMAN"           : "TOLIMAN,f|S|K1,14.65974476|-3600.35,-60.83715723|952.11,1.35",
        "TONATIUH"          : "TONATIUH,f|S|G9,12.08753272|147.22,76.90573366|-92.36,5.78",
        "TORCULAR"          : "TORCULAR,f|S|K0,1.75656404|70.82,9.15773579|38.99,4.26",
        "TUPÃ"              : "TUPÃ,f|S|F8,12.42951905|-181.6,-64.02208789|-60.8,6.99",
        "TUPI"              : "TUPI,f|S|F8,3.66197089|-193.62,-52.91583799|-91.92,7.12",
        "TUREIS"            : "TUREIS,f|S|F2,8.12573578|-83.29,-24.30432404|46.38,2.83",
        "UKDAH"             : "UKDAH,f|S|K3,9.66426718|47.81,-1.14281015|-62.92,3.9",
        "UKLUN"             : "UKLUN,f|S|G6,11.74735044|-63.05,-58.70370959|-69.87,7.47",
        "UNUKALHAI"         : "UNUKALHAI,f|S|K2,15.73779857|134.66,6.42562701|44.14,2.63",
        "URUK"              : "URUK,f|S|F8,19.53448919|63.68,16.47428997|15.49,8.97",
        "VEGA"              : "VEGA,f|S|A0,18.61564903|201.02,38.78369185|287.46,0.03",
        "VERITATE"          : "VERITATE,f|S|K0,23.52150387|287.3,39.23619815|-83.78,5.22",
        "VINDEMIATRIX"      : "VINDEMIATRIX,f|S|G8,13.03627697|-275.05,10.95915039|19.96,2.85",
        "WASAT"             : "WASAT,f|S|F0,7.33538265|-18.72,21.98232056|-7.76,3.5",
        "WAZN"              : "WAZN,f|S|K1,5.84933135|55.74,-35.76830863|404.68,3.12",
        "WEZEN"             : "WEZEN,f|S|F8,7.13985674|-2.75,-26.39319967|3.33,1.83",
        "WURREN"            : "WURREN,f|S|B6,1.13974493|21.17,-55.24576014|29.7,3.94",
        "XAMIDIMURA"        : "XAMIDIMURA,f|S|B1,16.86450898|-8.84,-38.04737967|-21.6,3.0",
        "XIHE"              : "XIHE,f|S|G8,18.72669716|21.54,36.55660486|57.61,6.04",
        "XUANGE"            : "XUANGE,f|S|A0,14.27306076|-187.42,46.08830548|159.01,4.18",
        "YED POSTERIOR"     : "YED POSTERIOR,f|S|G8,16.30535806|82.39,-4.69251067|40.08,3.23",
        "YED PRIOR"         : "YED PRIOR,f|S|M1,16.23909429|-45.83,-3.69432297|-142.91,2.73",
        "YILDUN"            : "YILDUN,f|S|A1,17.53694460|10.54,86.58646043|53.97,4.35",
        "ZANIAH"            : "ZANIAH,f|S|A2,12.33176581|-59.14,-0.66680331|-23.13,3.89",
        "ZAURAK"            : "ZAURAK,f|S|M1,3.96715732|60.51,-13.50851532|-111.34,2.97",
        "ZAVIJAVA"          : "ZAVIJAVA,f|S|F8,11.84492182|740.96,1.76471796|-271.18,3.59",
        "ZHANG"             : "ZHANG,f|S|G6,9.85797049|18.68,-14.84660315|-21.88,4.11",
        "ZIBAL"             : "ZIBAL,f|S|A5,3.26389570|-3.82,-8.81972985|45.52,4.8",
        "ZOSMA"             : "ZOSMA,f|S|A4,11.23513926|143.31,20.52371687|-130.43,2.56",
        "ZUBENELGENUBI"     : "ZUBENELGENUBI,f|S|A3,14.84797587|-105.69,-16.04177819|-69.0,2.75",
        "ZUBENELHAKRABI"    : "ZUBENELHAKRABI,f|S|K0,15.59210527|65.67,-14.78953681|6.93,3.91",
        "ZUBENESCHAMALI"    : "ZUBENESCHAMALI,f|S|B8,15.28344856|-96.39,-9.38291740|-20.76,2.61" }


    # Internally used to reference PyEphem objects.
    __PYEPHEM_CITY_LATITUDE = 0
    __PYEPHEM_CITY_LONGITUDE = 1
    __PYEPHEM_CITY_ELEVATION = 2

    __PYEPHEM_DATE_TUPLE_YEAR = 0
    __PYEPHEM_DATE_TUPLE_MONTH = 1
    __PYEPHEM_DATE_TUPLE_DAY = 2
    __PYEPHEM_DATE_TUPLE_HOUR = 3
    __PYEPHEM_DATE_TUPLE_MINUTE = 4
    __PYEPHEM_DATE_TUPLE_SECOND = 5

    __PYEPHEM_SATELLITE_RISING_DATE = 0
    __PYEPHEM_SATELLITE_RISING_ANGLE = 1
    __PYEPHEM_SATELLITE_CULMINATION_DATE = 2
    __PYEPHEM_SATELLITE_CULMINATION_ANGLE = 3
    __PYEPHEM_SATELLITE_SETTING_DATE = 4
    __PYEPHEM_SATELLITE_SETTING_ANGLE = 5


    @staticmethod
    def calculate(
            utcNow,
            latitude, longitude, elevation,
            planets,
            stars,
            satellites, satelliteData, startHourAsDateTimeInUTC, endHourAsDateTimeInUTC,
            comets, cometData, cometApparentMagnitudeData,
            minorPlanets, minorPlanetData, minorPlanetApparentMagnitudeData,
            apparentMagnitudeMaximum,
            logging ):

        data = { }

        ephemNow = ephem.Date( utcNow )

        observer = ephem.city( "London" ) # Any name will do; add in the correct latitude/longitude/elevation.
        observer.lat = str( latitude )
        observer.lon = str( longitude )
        observer.elev = elevation
        observer.date = ephemNow

        AstroPyEphem.__calculateMoon( ephemNow, observer, data )
        AstroPyEphem.__calculateSun( ephemNow, observer, data )
        AstroPyEphem.__calculatePlanets( observer, data, planets, apparentMagnitudeMaximum )
        AstroPyEphem.__calculateStars( observer, data, stars, apparentMagnitudeMaximum )

        AstroPyEphem.__calculateCometsMinorPlanets(
            observer, data,
            AstroBase.BodyType.COMET, comets, cometData, cometApparentMagnitudeData,
            apparentMagnitudeMaximum )

        AstroPyEphem.__calculateCometsMinorPlanets(
            observer, data,
            AstroBase.BodyType.MINOR_PLANET, minorPlanets, minorPlanetData, minorPlanetApparentMagnitudeData,
            apparentMagnitudeMaximum )

        AstroPyEphem.__calculateSatellites( ephemNow, observer, data, satellites, satelliteData, startHourAsDateTimeInUTC, endHourAsDateTimeInUTC )

        return data


    @staticmethod
    def getCities():
        return sorted( _city_data.keys(), key = locale.strxfrm )


    @staticmethod
    def getCredit():
        return _( "Calculations courtesy of PyEphem/XEphem. https://rhodesmill.org/pyephem" )


    @staticmethod
    def getLatitudeLongitudeElevation( city ):
        return \
            float( _city_data.get( city )[ AstroPyEphem.__PYEPHEM_CITY_LATITUDE ] ), \
            float( _city_data.get( city )[ AstroPyEphem.__PYEPHEM_CITY_LONGITUDE ] ), \
            _city_data.get( city )[ AstroPyEphem.__PYEPHEM_CITY_ELEVATION ]


    @staticmethod
    def getStatusMessage():
        minimalRequiredVersion = "4.1.3"
        installationCommand = "sudo apt-get install -y python3-pip\nsudo pip3 install --ignore-installed --upgrade ephem"
        message = None
        if not available:
            message = _( "PyEphem could not be found. Install using:\n\n" + installationCommand )

        elif LooseVersion( ephem.__version__ ) < LooseVersion( minimalRequiredVersion ):
            message = \
                _( "PyEphem must be version {0} or greater. Please upgrade:\n\n" + \
               installationCommand ).format( minimalRequiredVersion )

        return message


    @staticmethod
    def getVersion():
        return ephem.__version__


    @staticmethod
    def __calculateMoon( ephemNow, observer, data ):
        key = ( AstroBase.BodyType.MOON, AstroBase.NAME_TAG_MOON )
        moon = ephem.Moon( observer )
        sun = ephem.Sun( observer )

        data[ key + ( AstroBase.DATA_TAG_ILLUMINATION, ) ] = str( int( moon.phase ) ) # Needed for icon.

        phase = AstroBase.getLunarPhase( int( moon.phase ), ephem.next_full_moon( ephemNow ), ephem.next_new_moon( ephemNow ) ) # Need for notification.
        data[ key + ( AstroBase.DATA_TAG_PHASE, ) ] = phase

        brightLimb = AstroBase.getZenithAngleOfBrightLimb( ephemNow.datetime(), sun.ra, sun.dec, moon.ra, moon.dec, float( observer.lat ), float( observer.lon ) )
        data[ key + ( AstroBase.DATA_TAG_BRIGHT_LIMB, ) ] = str( brightLimb ) # Needed for icon.

        if not AstroPyEphem.__calculateCommon( data, observer, moon, AstroBase.BodyType.MOON, AstroBase.NAME_TAG_MOON ):
            data[ key + ( AstroBase.DATA_TAG_FIRST_QUARTER, ) ] = AstroBase.toDateTimeString( ephem.next_first_quarter_moon( ephemNow ).datetime() )
            data[ key + ( AstroBase.DATA_TAG_FULL, ) ] = AstroBase.toDateTimeString( ephem.next_full_moon( ephemNow ).datetime() )
            data[ key + ( AstroBase.DATA_TAG_THIRD_QUARTER, ) ] = AstroBase.toDateTimeString( ephem.next_last_quarter_moon( ephemNow ).datetime() )
            data[ key + ( AstroBase.DATA_TAG_NEW, ) ] = AstroBase.toDateTimeString( ephem.next_new_moon( ephemNow ).datetime() )

            dateTime, eclipseType, latitude, longitude = eclipse.getEclipse( ephemNow.datetime(), True )
            data[ key + ( AstroBase.DATA_TAG_ECLIPSE_DATE_TIME, ) ] = dateTime
            data[ key + ( AstroBase.DATA_TAG_ECLIPSE_TYPE, ) ] = eclipseType
            data[ key + ( AstroBase.DATA_TAG_ECLIPSE_LATITUDE, ) ] = latitude
            data[ key + ( AstroBase.DATA_TAG_ECLIPSE_LONGITUDE, ) ] = longitude


    @staticmethod
    def __calculateSun( ephemNow, observer, data ):
        sun = ephem.Sun()
        sun.compute( observer )
        if not AstroPyEphem.__calculateCommon( data, observer, sun, AstroBase.BodyType.SUN, AstroBase.NAME_TAG_SUN ):
            key = ( AstroBase.BodyType.SUN, AstroBase.NAME_TAG_SUN )
            equinox = ephem.next_equinox( ephemNow )
            solstice = ephem.next_solstice( ephemNow )
            data[ key + ( AstroBase.DATA_TAG_EQUINOX, ) ] = AstroBase.toDateTimeString( equinox.datetime() )
            data[ key + ( AstroBase.DATA_TAG_SOLSTICE, ) ] = AstroBase.toDateTimeString( solstice.datetime() )

            dateTime, eclipseType, latitude, longitude = eclipse.getEclipse( ephemNow.datetime(), False )
            data[ key + ( AstroBase.DATA_TAG_ECLIPSE_DATE_TIME, ) ] = dateTime
            data[ key + ( AstroBase.DATA_TAG_ECLIPSE_TYPE, ) ] = eclipseType
            data[ key + ( AstroBase.DATA_TAG_ECLIPSE_LATITUDE, ) ] = latitude
            data[ key + ( AstroBase.DATA_TAG_ECLIPSE_LONGITUDE, ) ] = longitude


    @staticmethod
    def __calculatePlanets( observer, data, planets, apparentMagnitudeMaximum ):
        for planet in planets:
            body = getattr( ephem, planet.title() )()
            body.compute( observer )
            if body.mag <= apparentMagnitudeMaximum:
                AstroPyEphem.__calculateCommon( data, observer, body, AstroBase.BodyType.PLANET, planet )


    @staticmethod
    def __calculateStars( observer, data, stars, apparentMagnitudeMaximum ):
        for star in stars:
            body = ephem.readdb( AstroPyEphem.__EPHEMERIS_STARS[ star.upper() ] )
            body.compute( observer )
            if body.mag <= apparentMagnitudeMaximum:
                AstroPyEphem.__calculateCommon( data, observer, body, AstroBase.BodyType.STAR, star )


    @staticmethod
    def __calculateCometsMinorPlanets( observer, data, bodyType, cometsMinorPlanets, orbitalElementData, apparentMagnitudeData, apparentMagnitudeMaximum ):

        def computeBody( observer, orbitalElementData ):
            body = ephem.readdb( orbitalElementData )
            body.compute( observer )
            return body


        def isBad( body ):
            try:
                bad = \
                    math.isnan( body.earth_distance ) or \
                    math.isnan( body.phase ) or \
                    math.isnan( body.size ) or \
                    math.isnan( body.sun_distance ) # Have found the data file may contain ***** in lieu of actual data!

            except Exception as e:
#TODO Cannot release comets stuff until PyEphem 4.1.4 is released.
                # Some comets with a near-parabolic orbit will trigger an error...
                # https://github.com/brandon-rhodes/pyephem/issues/239
                bad = True

            return bad


        if apparentMagnitudeData is None:
            for key in cometsMinorPlanets:
                if key in orbitalElementData:
                    body = computeBody( observer, orbitalElementData[ key ].getData() )
                    if not isBad( body ) and body.mag <= apparentMagnitudeMaximum:
                        AstroPyEphem.__calculateCommon( data, observer, body, bodyType, key )

        else:
            for key in cometsMinorPlanets:
                if key in orbitalElementData and key in apparentMagnitudeData and float( apparentMagnitudeData[ key ].getApparentMagnitude() ) < apparentMagnitudeMaximum:
                    body = computeBody( observer, orbitalElementData[ key ].getData() )
                    if not isBad( body ):
                        AstroPyEphem.__calculateCommon( data, observer, body, bodyType, key )


    # Calculates common attributes such as rise/set date/time, azimuth/altitude.
    #
    # Returns True if the body is never up; false otherwise.
    @staticmethod
    def __calculateCommon( data, observer, body, bodyType, nameTag ):
        neverUp = False
        key = ( bodyType, nameTag )
        try:
            # Must compute az/alt BEFORE rise/set otherwise results will be incorrect.
            data[ key + ( AstroBase.DATA_TAG_AZIMUTH, ) ] = repr( body.az )
            data[ key + ( AstroBase.DATA_TAG_ALTITUDE, ) ] = repr( body.alt )
            data[ key + ( AstroBase.DATA_TAG_RISE_DATE_TIME, ) ] = AstroBase.toDateTimeString( observer.next_rising( body ).datetime() )
            data[ key + ( AstroBase.DATA_TAG_SET_DATE_TIME, ) ] = AstroBase.toDateTimeString( observer.next_setting( body ).datetime() )

        except ephem.AlwaysUpError:
            pass

        except ephem.NeverUpError:
            del data[ key + ( AstroBase.DATA_TAG_AZIMUTH, ) ]
            del data[ key + ( AstroBase.DATA_TAG_ALTITUDE, ) ]
            neverUp = True

        return neverUp


    @staticmethod
    def __calculateSatellites( ephemNow, observer, data, satellites, satelliteData, startHourAsDateTimeInUTC, endHourAsDateTimeInUTC ):
        now = ephemNow.datetime().replace( tzinfo = datetime.timezone.utc )
        end = now + datetime.timedelta( hours = AstroBase.SATELLITE_SEARCH_DURATION_HOURS )
        windows = AstroBase.getStartEndWindows( now, end, startHourAsDateTimeInUTC, endHourAsDateTimeInUTC )

        observerVisiblePasses = observer.copy()
        observerVisiblePasses.pressure = 0
        observerVisiblePasses.horizon = "-0:34"

        for satellite in satellites:
            if satellite in satelliteData:
                key = ( AstroBase.BodyType.SATELLITE, satellite )
                earthSatellite = ephem.readtle( satelliteData[ satellite ].getName(), *satelliteData[ satellite ].getTLELineOneLineTwo() )
                for startDateTime, endDateTime in windows:
                    if AstroPyEphem.__calculateSatellite( ephem.Date( startDateTime ), ephem.Date( endDateTime ), data, key, earthSatellite, observer, observerVisiblePasses ):
                        break

        # The observer's date was constantly changed in the calculate satellite method,
        # so clean up before returning in case the observer is used later.
        observer.date = ephemNow


    @staticmethod
    def __calculateSatellite( startDateTime, endDateTime, data, key, earthSatellite, observer, observerVisiblePasses ):
        foundPass = False
        currentDateTime = startDateTime
        while currentDateTime < endDateTime:
            observer.date = currentDateTime
            earthSatellite.compute( observer )
            try:
                # Must set 'singlepass = False' as it is possible a pass is too quick/low and an exception is thrown.
                # https://github.com/brandon-rhodes/pyephem/issues/164
                # https://github.com/brandon-rhodes/pyephem/pull/85/files
                nextPass = observer.next_pass( earthSatellite, singlepass = False )
                if AstroPyEphem.__isSatellitePassValid( nextPass ):
                    passBeforeEndDateTime = nextPass[ AstroPyEphem.__PYEPHEM_SATELLITE_SETTING_DATE ] < endDateTime
                    passIsVisible = AstroPyEphem.__isSatellitePassVisible( observerVisiblePasses, earthSatellite, nextPass[ AstroPyEphem.__PYEPHEM_SATELLITE_CULMINATION_DATE ] )
                    if passBeforeEndDateTime and passIsVisible:
                        data[ key + ( AstroBase.DATA_TAG_RISE_DATE_TIME, ) ] = \
                            AstroBase.toDateTimeString( nextPass[ AstroPyEphem.__PYEPHEM_SATELLITE_RISING_DATE ].datetime() )

                        data[ key + ( AstroBase.DATA_TAG_RISE_AZIMUTH, ) ] = repr( nextPass[ AstroPyEphem.__PYEPHEM_SATELLITE_RISING_ANGLE ] )

                        data[ key + ( AstroBase.DATA_TAG_SET_DATE_TIME, ) ] = \
                            AstroBase.toDateTimeString( nextPass[ AstroPyEphem.__PYEPHEM_SATELLITE_SETTING_DATE ].datetime() )

                        data[ key + ( AstroBase.DATA_TAG_SET_AZIMUTH, ) ] = repr( nextPass[ AstroPyEphem.__PYEPHEM_SATELLITE_SETTING_ANGLE ] )
                        foundPass = True
                        break

                    # Look for the next pass starting shortly after current set.
                    currentDateTime = ephem.Date( nextPass[ AstroPyEphem.__PYEPHEM_SATELLITE_SETTING_DATE ] + ephem.minute * 15 ) # Bad pass data, so look shortly after the current time.

                else:
                    currentDateTime = ephem.Date( currentDateTime + ephem.minute * 15 ) # Bad pass data, so look shortly after the current time.

            except ValueError:
                if earthSatellite.circumpolar: # Satellite never rises/sets, so can only show current position.
                    data[ key + ( AstroBase.DATA_TAG_AZIMUTH, ) ] = repr( earthSatellite.az )
                    data[ key + ( AstroBase.DATA_TAG_ALTITUDE, ) ] = repr( earthSatellite.alt )
                    foundPass = True

                break

        return foundPass


    # Ensure:
    #    The satellite pass is numerically valid.
    #    Rise time exceeds transit time.
    #    Transit time exceeds set time.
    @staticmethod
    def __isSatellitePassValid( satellitePass ):
        return \
            satellitePass and \
            len( satellitePass ) == 6 and \
            satellitePass[ AstroPyEphem.__PYEPHEM_SATELLITE_RISING_DATE ] and \
            satellitePass[ AstroPyEphem.__PYEPHEM_SATELLITE_RISING_ANGLE ] and \
            satellitePass[ AstroPyEphem.__PYEPHEM_SATELLITE_CULMINATION_DATE ] and \
            satellitePass[ AstroPyEphem.__PYEPHEM_SATELLITE_CULMINATION_ANGLE ] and \
            satellitePass[ AstroPyEphem.__PYEPHEM_SATELLITE_SETTING_DATE ] and \
            satellitePass[ AstroPyEphem.__PYEPHEM_SATELLITE_SETTING_ANGLE ] and \
            satellitePass[ AstroPyEphem.__PYEPHEM_SATELLITE_CULMINATION_DATE ] > satellitePass[ AstroPyEphem.__PYEPHEM_SATELLITE_RISING_DATE ] and \
            satellitePass[ AstroPyEphem.__PYEPHEM_SATELLITE_SETTING_DATE ] > satellitePass[ AstroPyEphem.__PYEPHEM_SATELLITE_CULMINATION_DATE ]


    # Determine if a satellite pass is visible.
    #
    #    https://space.stackexchange.com/questions/4339/calculating-which-satellite-passes-are-visible
    #    https://stackoverflow.com/questions/19739831/is-there-any-way-to-calculate-the-visual-magnitude-of-a-satellite-iss
    #    https://www.celestrak.com/columns/v03n01
    @staticmethod
    def __isSatellitePassVisible( observerVisiblePasses, satellite, passDateTime ):
        observerVisiblePasses.date = passDateTime

        satellite.compute( observerVisiblePasses )
        sun = ephem.Sun()
        sun.compute( observerVisiblePasses )

        return \
            satellite.eclipsed is False and \
            sun.alt > ephem.degrees( "-18" ) and \
            sun.alt < ephem.degrees( "-6" )